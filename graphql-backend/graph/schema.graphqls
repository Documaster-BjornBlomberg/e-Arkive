# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Todo {
  id: ID!
  text: String!
  done: Boolean!
  user: User!
}

type User {
  id: ID!
  name: String!
  username: String!
  settings: [UserSetting]
}

type UserSetting {
  id: ID!
  key: String!
  value: String!
  createdAt: String!
  updatedAt: String!
}

type Node {
  id: ID!
  name: String!
  parentId: ID
  createdAt: String!
  updatedAt: String!
  children: [Node]
  parent: Node
  files: [File]
}

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  getFiles: [File!]!
  getFile(id: ID!): File
  downloadFile(id: ID!): File
  getFilesByNodeId(nodeId: ID!): [File!]!
  getRootNodes: [Node!]!
  getNodeById(id: ID!): Node
  getChildNodes(parentId: ID!): [Node!]!
  hello: String!
  me: User
  getUserSettings: [UserSetting]
  getUserSetting(key: String!): UserSetting
}

type Mutation {
  saveFile(input: FileInput!): File!
  deleteFile(id: ID!): Boolean!
  updateMetadata(fileId: ID!, metadataInput: [MetadataInput]!): File!
  deleteMetadata(fileId: ID!, keys: [String!]!): File!
  moveFile(fileId: ID!, nodeId: ID!): File!
  createNode(input: NodeInput!): Node!
  updateNode(id: ID!, input: NodeUpdateInput!): Node!
  deleteNode(id: ID!): Boolean!
  login(username: String!, password: String!): AuthPayload!
  register(username: String!, password: String!): AuthPayload!
  updatePassword(currentPassword: String!, newPassword: String!): Boolean!
  saveUserSetting(key: String!, value: String!): UserSetting!
  deleteUserSetting(key: String!): Boolean!
}

type File {
  id: ID!
  name: String!
  size: Int!
  contentType: String!
  createdAt: String!
  fileData: String
  metadata: [Metadata]
  nodeId: ID
  node: Node
}

type Metadata {
  key: String!
  value: String!
}

input FileInput {
  name: String!
  size: Int!
  contentType: String!
  fileData: String!
  metadata: [MetadataInput]
  nodeId: ID
}

input MetadataInput {
  key: String!
  value: String!
}

input NodeInput {
  name: String!
  parentId: ID
}

input NodeUpdateInput {
  name: String
  parentId: ID
}
